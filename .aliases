# Custom Aliases
alias al="code ~/.aliases"
alias cl="clear"
alias c="code ."
alias ll="ls -1a"
alias ..="cd ../"
alias ..l="cd ../ && ll"
alias pg="echo 'Pinging Google' && ping www.google.com"
alias cb="code ~/.zshrc"
alias sb="source ~/.zshrc"
alias de="cd ~/Desktop"
alias d="cd ~/code"
alias showFiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
alias hideFiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'
alias deleteDSFiles="find . -name '.DS_Store' -type f -delete"
alias kcd-oss="npx -p yo -p generator-kcd-oss -c 'yo kcd-oss'"
function crapp { cp -R ~/code/crapp "$@"; }
alias yarn-update="brew upgrade yarn"
alias flushdns="sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder"
alias dots='code ~/code/dotfiles'
alias npmGlobal="npm list -g --depth 0"
alias getSSHKey="pbcopy < ~/.ssh/id_rsa.pub"

## git aliases

alias gb="git browse"
alias ga="git add ."
alias gaa='git add -A'
function gc { git commit -m "$@"; }
alias gca='git commit --amend'
alias gca="git commit --amend"
alias gcane='git commit --amend --no-edit'
alias gcb='git checkout -b'
alias gct='git checkout-ticket'
alias gd='git diff'
alias gdw='git diff -w'
alias gf="git fetch"
alias gl='git log --color --graph --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --branches'
alias gp='git push'
alias gpf='git push --force-with-lease' # Are you sure you want to do this???
alias gp="git pull" # gitconfig should have git pull rebase as a default git: config branch.autosetuprebase always
alias gpm="git pull --no-rebase"
alias gpb='git push -u origin $(gitb)' #-u flag adds a tracking reference to the upstream server you are pushing to. 
alias gpr='git pull --rebase'
alias gpt='git push --follow-tags'
alias gpush="git push"
alias gra='git rebase --abort'
alias grc='git rebase --continue'
alias gs='git status -s'
alias gs="git status"

function defaultGitPullRebase {
  for branch in $(git for-each-ref --format='%(refname)' -- refs/heads/); do git config branch."${branch#refs/heads/}".rebase true; done
}

function grt { 
  git fetch;
  git push --delete origin "$@"; #delete remote tag
  git tag --delete "$@"; #delete local tag
}
function grs { 
  git remote -v
  git remote set-url origin "$@"
  git remote -v
}


function gri { 
  git rebase -i `git merge-base master HEAD`
}

function grim { 
  git rebase -i `git merge-base main HEAD`
}



## yarn aliases
alias yar="yarn run"
alias yac="yarn commit" # for repos with commitlint installed
alias yas="yarn run start -s --"
alias yab="yarn run build -s --"
alias yat="yarn run test -s --"
alias yav="yarn run validate -s --"
alias yoff="yarn add --offline"
alias ypm="echo \"Installing deps without lockfile and ignoring engines\" && yarn install --no-lockfile --ignore-engines"
removeAllGitTags() { # BE CAREFUL
  git tag -d $(git tag -l);
  git fetch;
  git push origin --delete $(git tag -l); # Pushing once should be faster than multiple times
  git tag -d $(git tag -l);
}

## use hub for git
alias git=hub

## util functions
mg () { mkdir "$@" && cd "$@" || exit; }
cdl() { cd "$@" && ll; }
npm-latest() { npm info "$1" | grep latest; }
killport() { lsof -i tcp:"$*" | awk 'NR!=1 {print $2}' | xargs kill -9 ;}
function quit () {
  if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: quit appname"
  else
    for appname in $1; do
    osascript -e 'quit app "'$appname'"'
    done
  fi
}

gif() {
  ffmpeg -i "$1" -vf "fps=25,scale=iw/2:ih/2:flags=lanczos,palettegen" -y "/tmp/palette.png"
  ffmpeg -i "$1" -i "/tmp/palette.png" -lavfi "fps=25,scale=iw/2:ih/2:flags=lanczos [x]; [x][1:v] paletteuse" -f image2pipe -vcodec ppm - | convert -delay 4 -layers Optimize -loop 0 - "${1%.*}.gif"
}