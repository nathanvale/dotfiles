{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Async IIFE" : {
		"prefix": "async IIFE",
		"body": [
			";",
			"",
"(async () => {",
  "  try {",
			"    const result = await Promise.resolve()",
			"    console.log(result)",
			"  } catch (error) {",
   "    throw error",
			"  }",
		"})()"
		],
		"description": "Sometimes, it’d be nice if you could use await at the top level of a module or script. Alas, it’s only available inside async functions. To solve this problem you can use you can use an Immediately Invoked Async Function Expression"
	}
}